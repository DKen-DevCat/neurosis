name: Frontend Mobile App CD

on:
  workflow_run:
    workflows: ["Frontend Mobile App CI"]
    types:
      - completed
    branches:
      - main

jobs:
  build:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    outputs:
      build_version: ${{ steps.expo-build.outputs.buildVersion }}
      build_url_android: ${{ steps.expo-build.outputs.buildUrlAndroid }}
      build_url_ios: ${{ steps.expo-build.outputs.buildUrliOS }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: front-end/mobile-app/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: front-end/mobile-app

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: EAS Login
        run: eas login --token ${{ secrets.EXPO_TOKEN }}
        working-directory: front-end/mobile-app

      - name: Build for Preview
        id: expo-build
        run: |
          cd front-end/mobile-app
          BUILD_MESSAGE="Build for main branch - Commit: ${{ github.sha }}"
          
          # Android Build
          eas build --platform android --profile preview --non-interactive --json > android_build.json
          ANDROID_URL=$(jq -r '.artifacts.buildUrl' android_build.json)
          echo "buildUrlAndroid=${ANDROID_URL}" >> $GITHUB_OUTPUT

          # iOS Build
          eas build --platform ios --profile preview --non-interactive --json > ios_build.json
          IOS_URL=$(jq -r '.artifacts.buildUrl' ios_build.json)
          echo "buildUrliOS=${IOS_URL}" >> $GITHUB_OUTPUT
          
          # Extract version
          APP_VERSION=$(jq -r '.appVersion' ios_build.json)
          BUILD_NUMBER=$(jq -r '.appBuildVersion' ios_build.json)
          echo "buildVersion=${APP_VERSION} (${BUILD_NUMBER})" >> $GITHUB_OUTPUT

  submit:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://play.google.com/store/apps # Replace with actual store URL
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: front-end/mobile-app/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: front-end/mobile-app

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: EAS Login
        run: eas login --token ${{ secrets.EXPO_TOKEN }}
        working-directory: front-end/mobile-app

      - name: Build and Submit Android
        run: |
          cd front-end/mobile-app
          eas build --platform android --profile production --non-interactive
          eas submit --platform android --latest --non-interactive
        env:
          GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Build and Submit iOS
        run: |
          cd front-end/mobile-app
          eas build --platform ios --profile production --non-interactive
          eas submit --platform ios --latest --non-interactive
        env:
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}